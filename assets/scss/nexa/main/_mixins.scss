// =========================================
// Mixins
// =========================================
// Examples: text-overflow, hover, flex, flexbox, flex-center, flex-center, theme builder, adaptive
// =========================================

// =========================================
// 1. Text Overflow
// =========================================
@mixin text-overflow($lines: 1) {
    overflow: hidden;

    @if $lines == 1 {
        white-space: nowrap;
        text-overflow: ellipsis;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}
// =========================================
// 2. Hover
// =========================================
@mixin hover {
    @media (hover: hover) and (pointer: fine) {
        &:hover {
            @content;
        }
    }

    @media (hover: none) and (pointer: coarse) {
        &:active {
            @content;
        }
    }
}
// =========================================
// 3. Flex
// =========================================

// Flex
@mixin flex($flex-options: ()) {
    display: flex;
    flex-direction: map-get($flex-options, direction);

    @if map-has-key($flex-options, justify) {
        justify-content: map-get($flex-options, justify);
    }

    @if map-has-key($flex-options, align) {
        align-items: map-get($flex-options, align);
    }

    @if map-has-key($flex-options, wrap) {
        flex-wrap: map-get($flex-options, wrap);
    }

    @if map-has-key($flex-options, gap) {
        gap: map-get($flex-options, gap);
    }
}

// Flexbox
@mixin flexbox($flexbox-align, $flexbox-justify, $flexbox-gap) {
    display: flex;
    align-items: $flexbox-align;
    justify-content: $flexbox-justify;
    gap: $flexbox-gap;
}

// Flex-center
@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

// Flex-column
@mixin flex-column($flex-column-gap) {
    display: flex;
    flex-direction: column;
    gap: $flex-column-gap;
}

// =========================================
// 3. Theme builder
// =========================================
@mixin theme($theme, $scheme) {
    @each $var, $value in map-get(map-get($schemes, $scheme), $theme) {
        #{$var}: #{$value};
    }
}
// =========================================
// 4. Adaptive
// =========================================
@mixin sm {
    @media (max-width: #{map-get($media-breakpoints, sm)}) {
        @content;
    }
}

@mixin sm-above {
    @media (min-width: #{map-get($media-breakpoints, sm) + 1}) {
        @content;
    }
}

@mixin md {
    @media (max-width: #{map-get($media-breakpoints, md)}) {
        @content;
    }
}

@mixin md-above {
    @media (min-width: #{map-get($media-breakpoints, md) + 1}) {
        @content;
    }
}

@mixin lg {
    @media (max-width: #{map-get($media-breakpoints, lg)}) {
        @content;
    }
}

@mixin lg-above {
    @media (min-width: #{map-get($media-breakpoints, lg) + 1}) {
        @content;
    }
}

@mixin xl {
    @media (max-width: #{map-get($media-breakpoints, xl)}) {
        @content;
    }
}

@mixin xl-above {
    @media (min-width: #{map-get($media-breakpoints, xl) + 1}) {
        @content;
    }
}

@mixin xxl {
    @media (max-width: #{map-get($media-breakpoints, xxl)}) {
        @content;
    }
}

@mixin xxl-above {
    @media (min-width: #{map-get($media-breakpoints, xxl) + 1}) {
        @content;
    }
}
@mixin adaptive($breakpoint) {
    @media (max-width: $breakpoint) {
        @content;
    }
}

@mixin adaptive-above($breakpoint) {
    @media (min-width: calc($breakpoint + 1px)) {
        @content;
    }
}
